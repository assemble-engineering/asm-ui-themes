@import "./util/reset.css";
@import "./util/css-variables.css";
@import "./util/scss-variables.scss";

@import url("//www.apple.com/wss/fonts?families=SF+Pro,v3|SF+Mono,v1|SF+Pro+Icons,v3");

.asm-alert {
  width: 100%;
  padding: var(--alertPadding, $alertPadding);
  border-radius: var(--borderRadius, $borderRadius);
  margin: 0 auto;
  text-align: center;

  &.warn {
    background: var(--warningBgColor, $warningBgColor);
    color: var(--warningFontColor, $warningFontColor);
  }

  &.error {
    background: var(--errorBgColor, $errorBgColor);
    color: var(--errorFontColor, $errorFontColor);
  }

  &.success {
    background: var(--successBgColor, $successBgColor);
    color: var(--successFontColor, $successFontColor);
  }

  &.info {
    background: var(--infoBgColor, $infoFontColor);
    color: var(--infoFontColor, $infoFontColor);
  }
}

.asm-button {
  background: var(--defaultButtonBgColor, $defaultButtonBgColor);
  border: var(--defaultButtonBorder, $defaultButtonBorder);
  color: var(--defaultButtonFontColor, $defaultButtonFontColor);

  border-radius: var(--buttonBorderRadius, $buttonBorderRadius);
  padding: var(--buttonPadding, $buttonPadding);
  font-size: var(--buttonFontSize, $buttonFontSize);
  min-width: var(--buttonMinWidth, $buttonMinWidth);
  letter-spacing: var(--buttonLetterSpacing, $buttonLetterSpacing);
  line-height: var(--buttonLineHeight, $buttonLineHeight);

  &:hover,
  &:focus {
    background: var(--defaultButtonHoverBgColor, $defaultButtonHoverBgColor);
    border: var(--defaultButtonHoverBorder, $defaultButtonHoverBorder);
    color: var(--defaultButtonHoverFontColor, $defaultButtonHoverFontColor);
  }

  &.asm-button-primary {
    background: var(--primaryButtonBgColor, $primaryButtonBgColor);
    border: var(--primaryButtonBorder, $primaryButtonBorder);
    color: var(--primaryButtonFontColor, $primaryButtonFontColor);

    &:hover,
    &:focus {
      background: var(--primaryButtonHoverBgColor, $primaryButtonHoverBgColor);
      border: var(--primaryButtonHoverBorder, $primaryButtonHoverBorder);
      color: var(--primaryButtonHoverFontColor, $primaryButtonHoverFontColor);
    }
  }

  &.asm-button-primary-neutral {
    background: var(
      --primaryNeutralButtonBgColor,
      $primaryNeutralButtonBgColor
    );
    border: var(--primaryNeutralButtonBorder, $primaryNeutralButtonBorder);
    color: var(--primaryNeutralButtonFontColor, $primaryNeutralButtonFontColor);

    &:hover,
    &:focus {
      background: var(
        --primaryNeutralButtonHoverBgColor,
        $primaryNeutralButtonHoverBgColor
      );
      border: var(
        --primaryNeutralButtonHoverBorder,
        $primaryNeutralButtonHoverBorder
      );
      color: var(
        --primaryNeutralButtonHoverFontColor,
        $primaryNeutralButtonHoverFontColor
      );
    }
  }

  &.asm-button-basic {
    background: var(--basicButtonBgColor, $basicButtonBgColor);
    border: var(--basicButtonBorder, $basicButtonBorder);
    color: var(--basicButtonFontColor, $basicButtonFontColor);

    &:hover,
    &:focus {
      background: var(--basicButtonHoverBgColor, $basicButtonHoverBgColor);
      border: var(--basicButtonHoverBorder, $basicButtonHoverBorder);
      color: var(--basicButtonHoverFontColor, $basicButtonHoverFontColor);
    }
  }

  &.asm-button-transparent {
    background: none;
    border: none;
    padding: 0;
    margin: 0;
    color: unset;
    border-radius: 0;
    font-size: unset;

    &:hover,
    &:focus {
      background: none;
      border: none;
      color: unset;
    }
  }

  .asm-button-child {
    pointer-events: none;
  }
}

.asm-checkbox {
  display: inline-flex;
  flex-direction: row-reverse;

  input {
    padding: 1px 3px;
    width: 20px;
    height: 20px;
    margin-right: 5px;
    border-radius: 5px;
    border: var(--inputBorder, $inputBorder);

    &:checked {
      border: none;
      background: var(--checkboxBgColor, $checkboxBgColor);

      &::after {
        content: "âœ“";
        color: var(--checkboxCheckColor, $checkboxCheckColor);
      }
    }

    &:disabled {
      background: var(--inputDisabledBgColor, $inputDisabledBgColor);
    }
  }
}

.asm-datepicker {
  input {
    color: var(--inputFontColor, $inputFontColor);
    border: var(--inputBorder, $inputBorder);
    border-radius: var(--borderRadius, $borderRadius);
    padding: var(--inputPadding, $inputPadding);

    &:disabled {
      background: var(--inputDisabledBgColor, $inputDisabledBgColor);
    }
  }
}

.asm-divider {
  border-bottom: var(--dividerBorder, $dividerBorder);
  margin-top: var(--dividerMargin, $dividerMargin);
  margin-bottom: var(--dividerMargin, $dividerMargin);
}

.asm-heading {
  margin-top: var(--headingTopMargin, $headingTopMargin);
  margin-bottom: var(--headingBottomMargin, $headingBottomMargin);
  color: var(--headingFontColor, $headingFontColor);

  &.h1 {
    font-size: var(--h1FontSize, $h1FontSize);
  }

  &.h2 {
    font-size: var(--h2FontSize, $h2FontSize);
  }

  &.h3 {
    font-size: var(--h3FontSize, $h3FontSize);
  }

  &.h4 {
    font-size: var(--h4FontSize, $h4FontSize);
  }

  &.h5 {
    font-size: var(--h5FontSize, $h5FontSize);
  }

  &.h6 {
    font-size: var(--h6FontSize, $h6FontSize);
  }

  &.bold {
    font-weight: bold;
  }

  &.italic {
    font-style: italic;
  }
}

.asm-icon-label-pair {
  figure {
    position: relative;
    margin-right: 5px;
  }

  img {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

.asm-icon {
  .fill {
    svg {
      fill: current-color;
    }
  }

  .stroke {
    svg {
      stroke: current-color;
    }
  }

  &.mini {
    height: var(--miniIconSize, $miniIconSize);
    width: var(--miniIconSize, $miniIconSize);
  }

  &.tiny {
    height: var(--tinyIconSize, $tinyIconSize);
    width: var(--tinyIconSize, $tinyIconSize);
  }

  &.small {
    height: var(--smallIconSize, $smallIconSize);
    width: var(--smallIconSize, $smallIconSize);
  }

  &.large {
    height: var(--largeIconSize, $largeIconSize);
    width: var(--largeIconSize, $largeIconSize);
  }

  &.big {
    height: var(--bigIconSize, $bigIconSize);
    width: var(--bigIconSize, $bigIconSize);
  }

  &.huge {
    height: var(--hugeIconSize, $hugeIconSize);
    width: var(--hugeIconSize, $hugeIconSize);
  }

  &.massive {
    height: var(--massiveIconSize, $massiveIconSize);
    width: var(--massiveIconSize, $massiveIconSize);
  }
}

.asm-iframe {
  border: var(--iframeBorder, $iframeBorder);
}

.asm-image-upload {
  input[type="file"] {
    color: var(--labelFontColor, $labelFontColor);

    &::file-selector-button {
      border: var(--primaryButtonBorder, $primaryButtonBorder);
      border-radius: var(--borderRadius, $borderRadius);
      padding: var(--buttonPadding, $buttonPadding);
      background: var(--primaryButtonBgColor, $primaryButtonBgColor);
      color: var(--primaryButtonFontColor, $primaryButtonFontColor);

      &:hover,
      &:focus {
        color: var(--primaryButtonHoverFontColor, $primaryButtonHoverFontColor);
        background: var(
          --primaryButtonHoverBgColor,
          $primaryButtonHoverBgColor
        );
        border: var(--primaryButtonHoverBorder, $primaryButtonHoverBorder);
      }
    }
  }
}

.asm-input {
  input {
    border: var(--inputBorder, $inputBorder);
    border-radius: var(--inputBorderRadius, $inputBorderRadius);
    padding: var(--inputPadding, $inputPadding);
    color: var(--inputFontColor, $inputFontColor);
    background: var(--inputBgColor, $inputBgColor);
    width: var(--inputWidth, $inputWidth);

    &:hover,
    &:focus {
      border: var(--inputFocusBorder, $inputFocusBorder);
    }

    &:disabled {
      background: var(--inputDisabledBgColor, $inputDisabledBgColor);
    }

    &[type="color"] {
      padding: 0;
      border: none;
      width: 20px;
      height: 24px;
    }

    &[type="range"] {
      appearance: slider-horizontal;
    }

    &::placeholder {
      color: var(--inputPlaceholderColor, $inputPlaceholderColor);
    }
  }
}

.asm-label {
  display: block;
  margin: var(--labelMargin, $labelMargin);
  color: var(--labelFontColor, $labelFontColor);
}

.asm-modal-overlay {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: var(--modalOverlayBgColor, $modalOverlayBgColor);
  z-index: 9999;

  .asm-modal {
    position: relative;
    z-index: 1000;
    background: var(--modalBgColor, $modalBgColor);
    margin: 5vh 15vw;
    height: 90vh;
    border-radius: var(--modalBorderRadius, $modalBorderRadius);

    .asm-modal-content {
      padding: var(--modalPadding, $modalPadding);
      height: inherit;
    }

    .modal-close,
    .asm-modal-close-button {
      position: absolute;
      left: 20px;
      top: 20px;
      padding: 5px;
      border-radius: 5000px;
      background: var(--modalCloseButtonBgColor, $modalCloseButtonBgColor);
      border: var(--modalCloseButtonBorder, $modalCloseButtonBorder);
      color: var(--modalCloseButtonFontColor, $modalCloseButtonFontColor);

      &:hover,
      &:focus {
        background: var(
          --modalCloseButtonHoverBgColor,
          $modalCloseButtonHoverBgColor
        );
        color: var(
          --modalCloseButtonHoverFontColor,
          $modalCloseButtonHoverFontColor
        );
        border: var(
          --modalCloseButtonHoverBorder,
          $modalCloseButtonHoverBorder
        );
      }

      .asm-icon.small {
        color: black;
        height: 20px;
        width: 20px;
      }
    }
  }
}

.asm-radio-button {
  display: flex;
  flex-direction: row-reverse;
  align-items: center;
  justify-content: flex-end;

  input {
    padding: 0;
    border: none;
    width: 20px;
    height: 24px;
    appearance: radio;
    margin-right: 5px;

    &:disabled {
      background: var(--inputDisabledBgColor, $inputDisabledBgColor);
    }
  }
}

.asm-radio-button-group-fieldset {
  color: var(--labelFontColor, $labelFontColor);
  border: var(--inputBorder, $inputBorder);
  border-radius: var(--borderRadius, $borderRadius);
  padding: 5px;

  legend {
    padding: 0 5px;
  }

  .asm-radio-button-group {
    padding: 5px;
  }
}

/* Spinner Keyframes */
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.asm-spinner {
  animation-name: spin;
  animation-duration: 1000ms;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
}

.asm-table {
  width: 100%;
  border: var(--tableBorder, $tableBorder);
  color: var(--bodyFontColor, $bodyFontColor);

  .asm-table-header {
    border-bottom: var(--tableBorder, $tableBorder);

    .asm-table-header-column {
      cursor: default;
      padding: var(--tablePadding, $tablePadding);
    }
  }

  .asm-table-body {
    .asm-table-body-column {
      padding: var(--tablePadding, $tablePadding);
    }
  }

  .asm-table-footer {
    border-top: var(--tableBorder, $tableBorder);

    .asm-table-body-column {
      padding: var(--tablePadding, $tablePadding);
    }
  }
}

.asm-text {
  line-height: var(--bodyLineHeight, $bodyLineHeight);
  color: var(--bodyFontColor, $bodyFontColor);

  &.p {
    font-size: var(--bodyFontSize, $bodyFontSize);
  }

  &.span {
    font-size: var(--bodyFontSize, $bodyFontSize);
  }

  &.span {
    font-size: var(--bodyFontSize, $bodyFontSize);
  }

  &.pre {
    white-space: pre-wrap;
    tab-size: 2;
    font-size: var(--bodyFontSize, $bodyFontSize);
  }

  &.code {
    font-family: Menlo, Monaco, Consolas, "Courier New", monospace;
    font-size: var(--codeFontSize, $codeFontSize);
    display: inline-block;
    padding: 10px;
    background: #333;
    color: #ddd;
    line-height: 1.5;
    border-radius: var(--borderRadius, $borderRadius);
    white-space: pre-wrap;
    tab-size: 2;
  }

  &.figcaption {
    font-size: var(--captionFontSize, $captionFontSize);
    font-style: italic;
  }

  &.bold {
    font-weight: bold;
  }

  &.italic {
    font-style: italic;
  }
}

.asm-video {
  border-radius: 20px;
}
