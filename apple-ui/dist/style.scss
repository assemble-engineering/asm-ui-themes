@import url("//www.apple.com/wss/fonts?families=SF+Pro,v3|SF+Mono,v1|SF+Pro+Icons,v3");

/***
    The new CSS reset - version 1.8.3 (last updated 21.1.2023)
    GitHub page: https://github.com/elad2412/the-new-css-reset
***/

/*
    Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
    - The "symbol *" part is to solve Firefox SVG sprite bug
 */

*:where(:not(html, iframe, canvas, img, svg, video, audio):not(svg *, symbol *)) {
  all: unset;
  display: revert;
}

/* Preferred box-sizing value */

*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Reapply the pointer cursor for anchor tags */

a, button {
  cursor: revert;
}

/* Remove list styles (bullets/numbers) */

ol, ul, menu {
  list-style: none;
}

/* For images to not be able to exceed their container */

img {
  max-inline-size: 100%;
  max-block-size: 100%;
}

/* removes spacing between cells in tables */

table {
  border-collapse: collapse;
}

/* Safari - solving issue when using user-select:none on the <body> text input doesn't working */

input, textarea {
  -webkit-user-select: auto;
}

/* revert the 'white-space' property for textarea elements on Safari */

textarea {
  white-space: revert;
}

/* minimum style to allow to style meter element */

meter {
  -webkit-appearance: revert;
  -moz-appearance: revert;
       appearance: revert;
}

/* preformatted text - use only for this feature */

pre {
  all: revert;
}

/* reset default text opacity of input placeholder */

::-moz-placeholder {
  color: unset;
}

::placeholder {
  color: unset;
}

/* remove default dot (â€¢) sign */

::marker {
  content: initial;
}

/* fix the feature of 'hidden' attribute.
 display:revert; revert to element instead of attribute */

:where([hidden]) {
  display: none;
}

/* revert for bug in Chromium browsers
 - fix for the content editable attribute will work properly.
 - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element*/

:where([contenteditable]:not([contenteditable="false"])) {
  -moz-user-modify: read-write;
  -webkit-user-modify: read-write;
  overflow-wrap: break-word;
  -webkit-line-break: after-white-space;
  -webkit-user-select: auto;
}

/* apply back the draggable feature - exist only in Chromium and Safari */

:where([draggable="true"]) {
  -webkit-user-drag: element;
}

/* Revert Modal native behavior */

:where(dialog:modal) {
  all: revert;
}

:root {
  /* Global */
  --borderRadius: 5px;
  --padding: 10px;
  --dividerColor: #333;
  --border: 1px solid #666;
  /* Buttons */
  --buttonPadding: 8px 16px;
  --buttonBorderRadius: 980px;
  --buttonFontSize: 17px;
  --buttonMinWidth: 28px;
  --buttonLetterSpacing: -0.022em;
  --buttonLineHeight: 1.1764805882;
  --defaultButtonBgColor: #0071e3;
  --defaultButtonFontColor: #fff;
  --defaultButtonBorder: none;
  --defaultButtonHoverBgColor: #006edb;
  --defaultButtonHoverFontColor: #fff;
  --defaultButtonHoverBorder: none;
  --primaryButtonBgColor: #0071e3;
  --primaryButtonFontColor: #fff;
  --primaryButtonBorder: none;
  --primaryButtonHoverBgColor: #006edb;
  --primaryButtonHoverFontColor: #fff;
  --primaryButtonHoverBorder: none;
  --primaryNeutralButtonBgColor: #1d1d1f;
  --primaryNeutralButtonFontColor: #fff;
  --primaryNeutralButtonBorder: none;
  --primaryNeutralButtonHoverBgColor: #272729;
  --primaryNeutralButtonHoverFontColor: #fff;
  --primaryNeutralButtonHoverBorder: none;
  --basicButtonBgColor:  #f5f5f7;
  --basicButtonFontColor: #000;
  --basicButtonBorder: 1px solid #fff;
  --basicButtonHoverBgColor: #fff;
  --basicButtonHoverFontColor: #000;
  --basicButtonHoverBorder: 1px solid #fff;
  /* Font */
  --headingTopMargin: .5rem;
  --headingBottomMargin: 1rem;
  --headingFontColor: #333;
  --h1FontSize: 3.5rem;
  --h2FontSize: 2.75rem;
  --h3FontSize: 2.25rem;
  --h4FontSize: 2rem;
  --h5FontSize: 1.75rem;
  --h6FontSize: 1.5rem;
  --bodyLineHeight: 1.25;
  --bodyFontSize: 1rem;
  --bodyFontColor: #333;
  --codeFontSize: .875rem;
  --captionFontSize: .875rem;
  /* Icons */
  --miniIconSize: 16px;
  --tinyIconSize: 20px;
  --smallIconSize: 24px;
  --largeIconSize: 32px;
  --bigIconSize: 40px;
  --hugeIconSize: 56px;
  --massiveIconSize: 80px;
  /* Inputs */
  --labelFontColor: gray;
  --labelFontSize: 10px;
  --labelMargin: 0 0 3px 0;
  --inputBgColor: white;
  --inputPadding: 22px 8px 6px 8px;
  --inputFontSize: 1rem;
  --inputBorder: 1px solid #c7c7c7;
  --inputFocusBorder: 4px solid #5E9ED6;
  --inputFontColor: #333;
  --inputDisabledBgColor: #fafafa;
  --checkboxBgColor: #0000ff80;
  --checkboxCheckColor: #ddd;
  --inputWidth: 500px;
  --inputBoderRadius: 10px;
  --inputPlaceholderColor: #8C8C91;
  /* Alerts */
  --alertPadding: 8px 12px;
  --warningBgColor: rgba(255, 255, 0, .25);
  --warningFontColor: #b2b200;
  --successBgColor: rgba(0, 255, 0, .25);
  --successFontColor: #009900;
  --errorBgColor: rgba(255, 0, 0, .25);
  --errorFontColor: #ff0000;
  --infoBgColor: rgb(0, 0, 255, .25);
  --infoFontColor: #0000ff;
  /* // Modal */
  --modalPadding: 80px 20px 20px;
  --modalBgColor: white;
  --modalBorderRadius: 20px;
  --modalOverlayBgColor: rgba(51, 51, 51, .6);
  --modalCloseButtonBgColor: #e8e8ed;
  --modalCloseButtonBorder: #e8e8ed;
  --modalCloseButtonHoverBorder:var(--defaultButtonBorder);
  --modalCloseButtonFontColor: black;
  --modalCloseButtonHoverBgColor: var(--defaultButtonHoverBgColor);
  --modalCloseButtonHoverFontColor: var(--defaultButtonHoverFontColor);
  /* Table */
  --tablePadding: 5px 10px;
  --tableBorder: 1px solid #666;
  /* Divider */
  --dividerBorder: var(--border);
  --dividerMargin: 1rem;
  /* Iframe */
  --iframeBorder: var(--border);
}

/* Fallback values for CSS variables
This pattern allows us a simple way
to overwrite the default stylesheets
variable definitions by defining a CSS variable
to a value that does not exist by supplying
these variables as fallback values

To overwrite them, simply add a file with
the variables in css-variables.css to your repo */

/* Global */

$borderRadius: 5px;

$padding: 10px;

$dividerColor: #333;

$border: 1px solid #666;

/* Buttons */

$buttonPadding: 8px 16px;

$buttonBorderRadius: 980px;

$buttonFontSize: 17px;

$buttonMinWidth: 28px;

$buttonLetterSpacing: -0.022em;

$buttonLineHeight: 1.1764805882;

$defaultButtonBgColor: #0000ff80;

$defaultButtonFontColor: #ddd;

$defaultButtonBorder: none;

$defaultButtonHoverBgColor: #0000ff90;

$defaultButtonHoverFontColor: #ddd;

$defaultButtonHoverBorder: none;

$primaryButtonBgColor: #ddd;

$primaryButtonFontColor: #333;

$primaryButtonBorder: 1px solid #0000ff80;

$primaryButtonHoverBgColor: #0000ff10;

$primaryButtonHoverFontColor: #333;

$primaryButtonHoverBorder: 1px solid #0000ff90;

$primaryNeutralButtonBgColor: #1d1d1f;

$primaryNeutralButtonFontColor: #fff;

$primaryNeutralButtonBorder: none;

$primaryNeutralButtonHoverBgColor: #272729;

$primaryNeutralButtonHoverFontColor: #fff;

$primaryNeutralButtonHoverBorder: none;

$basicButtonBgColor: #0000ff30;

$basicButtonFontColor: #333;

$basicButtonBorder: none;

$basicButtonHoverBgColor: #0000ff40;

$basicButtonHoverFontColor: #333;

$basicButtonHoverBorder: none;

/* Font */

$headingTopMargin: 0.5rem;

$headingBottomMargin: 1rem;

$headingFontColor: #333;

$h1FontSize: 3.5rem;

$h2FontSize: 2.75rem;

$h3FontSize: 2.25rem;

$h4FontSize: 2rem;

$h5FontSize: 1.75rem;

$h6FontSize: 1.5rem;

$bodyLineHeight: 1.25;

$bodyFontSize: 1rem;

$bodyFontColor: #333;

$codeFontSize: 0.875rem;

$captionFontSize: 0.875rem;

/* Icons */

$miniIconSize: 16px;

$tinyIconSize: 20px;

$smallIconSize: 24px;

$largeIconSize: 32px;

$bigIconSize: 40px;

$hugeIconSize: 56px;

$massiveIconSize: 80px;

/* Inputs */

$labelFontColor: gray;

$labelFontSize: 10px;

$labelMargin: 0 0 3px 0;

$inputPadding: 22px 8px 6px 8px;

$inputFontSize: 1rem;

$inputBgColor: white;

$inputBorder: 1px solid #c7c7c7;

$inputFocusBorder: 4px solid #5e9ed6;

$inputFontColor: #333;

$inputDisabledBgColor: #fafafa;

$checkboxBgColor: #0000ff80;

$checkboxCheckColor: #ddd;

$inputWidth: 500px;

$inputBorderRadius: 10px;

$inputPlaceholderColor: #8c8c91;

/* Alerts */

$alertPadding: 8px 12px;

$warningBgColor: rgba(255, 255, 0, 0.25);

$warningFontColor: #b2b200;

$successBgColor: rgba(0, 255, 0, 0.25);

$successFontColor: #009900;

$errorBgColor: rgba(255, 0, 0, 0.25);

$errorFontColor: #ff0000;

$infoBgColor: rgb(0, 0, 255, 0.25);

$infoFontColor: #0000ff;

/* Modal */

$modalPadding: 80px 20px 20px;

$modalBorderRadius: 20px;

$modalBgColor: #ddd;

$modalOverlayBgColor: rgba(51, 51, 51, 0.6);

$modalCloseButtonBgColor: #e8e8ed;

$modalCloseButtonBorder: #e8e8ed;

$modalCloseButtonHoverBorder: $defaultButtonBorder;

$modalCloseButtonFontColor: black;

$modalCloseButtonHoverBgColor: $defaultButtonHoverBgColor;

$modalCloseButtonHoverFontColor: $defaultButtonHoverFontColor;

/* Table */

$tablePadding: 5px 10px;

$tableBorder: 1px solid #666;

/* Divider */

$dividerBorder: $border;

$dividerMargin: 1rem;

/* Iframe */

$iframeBorder: $border;

.asm-alert {
  width: 100%;
  padding: var(--alertPadding, $alertPadding);
  border-radius: var(--borderRadius, $borderRadius);
  margin: 0 auto;
  text-align: center;
  &.warn {
    background: var(--warningBgColor, $warningBgColor);
    color: var(--warningFontColor, $warningFontColor);
  }
  &.error {
    background: var(--errorBgColor, $errorBgColor);
    color: var(--errorFontColor, $errorFontColor);
  }
  &.success {
    background: var(--successBgColor, $successBgColor);
    color: var(--successFontColor, $successFontColor);
  }
  &.info {
    background: var(--infoBgColor, $infoFontColor);
    color: var(--infoFontColor, $infoFontColor);
  }
}

.asm-button {
  background: var(--defaultButtonBgColor, $defaultButtonBgColor);
  border: var(--defaultButtonBorder, $defaultButtonBorder);
  color: var(--defaultButtonFontColor, $defaultButtonFontColor);
  border-radius: var(--buttonBorderRadius, $buttonBorderRadius);
  padding: var(--buttonPadding, $buttonPadding);
  font-size: var(--buttonFontSize, $buttonFontSize);
  min-width: var(--buttonMinWidth, $buttonMinWidth);
  letter-spacing: var(--buttonLetterSpacing, $buttonLetterSpacing);
  line-height: var(--buttonLineHeight, $buttonLineHeight);
  &:hover,
  &:focus {
    background: var(--defaultButtonHoverBgColor, $defaultButtonHoverBgColor);
    border: var(--defaultButtonHoverBorder, $defaultButtonHoverBorder);
    color: var(--defaultButtonHoverFontColor, $defaultButtonHoverFontColor);
  }
  &.asm-button-primary {
    background: var(--primaryButtonBgColor, $primaryButtonBgColor);
    border: var(--primaryButtonBorder, $primaryButtonBorder);
    color: var(--primaryButtonFontColor, $primaryButtonFontColor);
    &:hover,
    &:focus {
      background: var(--primaryButtonHoverBgColor, $primaryButtonHoverBgColor);
      border: var(--primaryButtonHoverBorder, $primaryButtonHoverBorder);
      color: var(--primaryButtonHoverFontColor, $primaryButtonHoverFontColor);
    }
  }
  &.asm-button-primary-neutral {
    background: var(
      --primaryNeutralButtonBgColor,
      $primaryNeutralButtonBgColor
    );
    border: var(--primaryNeutralButtonBorder, $primaryNeutralButtonBorder);
    color: var(--primaryNeutralButtonFontColor, $primaryNeutralButtonFontColor);
    &:hover,
    &:focus {
      background: var(
        --primaryNeutralButtonHoverBgColor,
        $primaryNeutralButtonHoverBgColor
      );
      border: var(
        --primaryNeutralButtonHoverBorder,
        $primaryNeutralButtonHoverBorder
      );
      color: var(
        --primaryNeutralButtonHoverFontColor,
        $primaryNeutralButtonHoverFontColor
      );
    }
  }
  &.asm-button-basic {
    background: var(--basicButtonBgColor, $basicButtonBgColor);
    border: var(--basicButtonBorder, $basicButtonBorder);
    color: var(--basicButtonFontColor, $basicButtonFontColor);
    &:hover,
    &:focus {
      background: var(--basicButtonHoverBgColor, $basicButtonHoverBgColor);
      border: var(--basicButtonHoverBorder, $basicButtonHoverBorder);
      color: var(--basicButtonHoverFontColor, $basicButtonHoverFontColor);
    }
  }
  &.asm-button-transparent {
    background: none;
    border: none;
    padding: 0;
    margin: 0;
    color: unset;
    border-radius: 0;
    font-size: unset;
    &:hover,
    &:focus {
      background: none;
      border: none;
      color: unset;
    }
  }
  .asm-button-child {
    pointer-events: none;
  }
}

.asm-checkbox {
  display: inline-flex;
  flex-direction: row-reverse;
  .asm-label {
    position: relative;
    top: 3px;
    left: 0px;
  }
  input {
    padding: 1px 3px;
    width: 20px;
    height: 20px;
    margin-right: 5px;
    border-radius: 5px;
    border: var(--inputBorder, $inputBorder);
    &:checked {
      border: none;
      background: var(--checkboxBgColor, $checkboxBgColor);
      &::after {
        content: "âœ“";
        color: var(--checkboxCheckColor, $checkboxCheckColor);
      }
    }
    &:disabled {
      background: var(--inputDisabledBgColor, $inputDisabledBgColor);
    }
  }
}

.asm-datepicker {
  position: relative;
  input {
    color: var(--inputFontColor, $inputFontColor);
    border: var(--inputBorder, $inputBorder);
    border-radius: var(--borderRadius, $borderRadius);
    padding: var(--inputPadding, $inputPadding);
    &:disabled {
      background: var(--inputDisabledBgColor, $inputDisabledBgColor);
    }
  }
  .asm-label {
  }
  .react-datepicker-wrapper {
  }
  .react-datepicker__tab-loop {
    .react-datepicker-popper {
      width: 300px;
      .react-datepicker {
        width: 100%;
        .react-datepicker__aria-live {
          display: none;
        }
        .react-datepicker__navigation--previous {
          left: 70%;
        }
      }
      &[data-placement^="bottom"] {
        padding-top: 0px;
      }
    }
  }
  .react-datepicker__triangle {
    display: none;
  }
  .react-datepicker__month-container {
    width: 100%;
    .react-datepicker__header {
      background-color: white;
      border-bottom: none;
      .react-datepicker__current-month {
        text-align: left;
        margin-left: 2.5%;
      }
      .react-datepicker__day-names {
        display: flex;
        justify-content: space-between;
      }
    }
    .react-datepicker__month {
      margin: 0px;
      .react-datepicker__week {
        display: flex;
        justify-content: space-between;
      }
    }
  }
}

.asm-divider {
  border-bottom: var(--dividerBorder, $dividerBorder);
  margin-top: var(--dividerMargin, $dividerMargin);
  margin-bottom: var(--dividerMargin, $dividerMargin);
}

.asm-heading {
  margin-top: var(--headingTopMargin, $headingTopMargin);
  margin-bottom: var(--headingBottomMargin, $headingBottomMargin);
  color: var(--headingFontColor, $headingFontColor);
  &.h1 {
    font-size: var(--h1FontSize, $h1FontSize);
  }
  &.h2 {
    font-size: var(--h2FontSize, $h2FontSize);
  }
  &.h3 {
    font-size: var(--h3FontSize, $h3FontSize);
  }
  &.h4 {
    font-size: var(--h4FontSize, $h4FontSize);
  }
  &.h5 {
    font-size: var(--h5FontSize, $h5FontSize);
  }
  &.h6 {
    font-size: var(--h6FontSize, $h6FontSize);
  }
  &.bold {
    font-weight: bold;
  }
  &.italic {
    font-style: italic;
  }
}

.asm-icon-label-pair {
  figure {
    position: relative;
    margin-right: 5px;
  }
  img {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

.asm-icon {
  .fill {
    svg {
      fill: current-color;
    }
  }
  .stroke {
    svg {
      stroke: current-color;
    }
  }
  &.mini {
    height: var(--miniIconSize, $miniIconSize);
    width: var(--miniIconSize, $miniIconSize);
  }
  &.tiny {
    height: var(--tinyIconSize, $tinyIconSize);
    width: var(--tinyIconSize, $tinyIconSize);
  }
  &.small {
    height: var(--smallIconSize, $smallIconSize);
    width: var(--smallIconSize, $smallIconSize);
  }
  &.large {
    height: var(--largeIconSize, $largeIconSize);
    width: var(--largeIconSize, $largeIconSize);
  }
  &.big {
    height: var(--bigIconSize, $bigIconSize);
    width: var(--bigIconSize, $bigIconSize);
  }
  &.huge {
    height: var(--hugeIconSize, $hugeIconSize);
    width: var(--hugeIconSize, $hugeIconSize);
  }
  &.massive {
    height: var(--massiveIconSize, $massiveIconSize);
    width: var(--massiveIconSize, $massiveIconSize);
  }
}

.asm-iframe {
  border: var(--iframeBorder, $iframeBorder);
}

.asm-image-upload {
  input[type="file"] {
    color: var(--labelFontColor, $labelFontColor);
    &::file-selector-button {
      border: var(--primaryButtonBorder, $primaryButtonBorder);
      border-radius: var(--borderRadius, $borderRadius);
      padding: var(--buttonPadding, $buttonPadding);
      background: var(--primaryButtonBgColor, $primaryButtonBgColor);
      color: var(--primaryButtonFontColor, $primaryButtonFontColor);
      &:hover,
      &:focus {
        color: var(--primaryButtonHoverFontColor, $primaryButtonHoverFontColor);
        background: var(
          --primaryButtonHoverBgColor,
          $primaryButtonHoverBgColor
        );
        border: var(--primaryButtonHoverBorder, $primaryButtonHoverBorder);
      }
    }
  }
}

.asm-input {
  position: relative;
  input {
    border: var(--inputBorder, $inputBorder);
    border-radius: var(--inputBorderRadius, $inputBorderRadius);
    padding: var(--inputPadding, $inputPadding);
    color: var(--inputFontColor, $inputFontColor);
    background: var(--inputBgColor, $inputBgColor);
    width: var(--inputWidth, $inputWidth);
    font-size: var(--inputFontSize, $inputFontSize);
    &:hover,
    &:focus {
      outline: var(--inputFocusBorder, $inputFocusBorder);
    }
    &:disabled {
      background: var(--inputDisabledBgColor, $inputDisabledBgColor);
    }
    &[type="color"] {
      padding: 0;
      border: none;
      width: 20px;
      height: 24px;
    }
    &[type="range"] {
      -webkit-appearance: slider-horizontal;
         -moz-appearance: slider-horizontal;
              appearance: slider-horizontal;
    }
    &::-moz-placeholder {
      color: var(--inputPlaceholderColor, $inputPlaceholderColor);
    }
    &::placeholder {
      color: var(--inputPlaceholderColor, $inputPlaceholderColor);
    }
  }
}

.asm-modal-overlay {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: var(--modalOverlayBgColor, $modalOverlayBgColor);
  z-index: 9999;
  .asm-modal {
    position: relative;
    z-index: 1000;
    background: var(--modalBgColor, $modalBgColor);
    margin: 5vh 15vw;
    height: 90vh;
    border-radius: var(--modalBorderRadius, $modalBorderRadius);
    .asm-modal-content {
      padding: var(--modalPadding, $modalPadding);
      height: inherit;
    }
    .modal-close,
    .asm-modal-close-button {
      position: absolute;
      left: 20px;
      top: 20px;
      padding: 5px;
      border-radius: 5000px;
      background: var(--modalCloseButtonBgColor, $modalCloseButtonBgColor);
      border: var(--modalCloseButtonBorder, $modalCloseButtonBorder);
      color: var(--modalCloseButtonFontColor, $modalCloseButtonFontColor);
      &:hover,
      &:focus {
        background: var(
          --modalCloseButtonHoverBgColor,
          $modalCloseButtonHoverBgColor
        );
        color: var(
          --modalCloseButtonHoverFontColor,
          $modalCloseButtonHoverFontColor
        );
        border: var(
          --modalCloseButtonHoverBorder,
          $modalCloseButtonHoverBorder
        );
      }
      .asm-icon.small {
        color: black;
        height: 20px;
        width: 20px;
      }
    }
  }
}

.asm-radio-button {
  display: flex;
  flex-direction: row-reverse;
  align-items: center;
  justify-content: flex-end;
  .asm-label {
    position: relative;
    top: 0px;
    left: 0px;
  }
  input {
    padding: 0;
    border: none;
    width: 20px;
    height: 24px;
    -webkit-appearance: radio;
       -moz-appearance: radio;
            appearance: radio;
    margin-right: 5px;
    &:disabled {
      background: var(--inputDisabledBgColor, $inputDisabledBgColor);
    }
  }
}

.asm-radio-button-group-fieldset {
  color: var(--labelFontColor, $labelFontColor);
  border: var(--inputBorder, $inputBorder);
  border-radius: var(--borderRadius, $borderRadius);
  padding: 5px;
  legend {
    padding: 0 5px;
  }
  .asm-radio-button-group {
    padding: 5px;
  }
}

/* Spinner Keyframes */

@keyframes spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

.asm-spinner {
  animation-name: spin;
  animation-duration: 1000ms;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
}

.asm-table {
  width: 100%;
  border: var(--tableBorder, $tableBorder);
  color: var(--bodyFontColor, $bodyFontColor);
  .asm-table-header {
    border-bottom: var(--tableBorder, $tableBorder);
    .asm-table-header-column {
      cursor: default;
      padding: var(--tablePadding, $tablePadding);
    }
  }
  .asm-table-body {
    .asm-table-body-column {
      padding: var(--tablePadding, $tablePadding);
    }
  }
  .asm-table-footer {
    border-top: var(--tableBorder, $tableBorder);
    .asm-table-body-column {
      padding: var(--tablePadding, $tablePadding);
    }
  }
}

.asm-text {
  line-height: var(--bodyLineHeight, $bodyLineHeight);
  color: var(--bodyFontColor, $bodyFontColor);
  &.p {
    font-size: var(--bodyFontSize, $bodyFontSize);
  }
  &.span {
    font-size: var(--bodyFontSize, $bodyFontSize);
  }
  &.span {
    font-size: var(--bodyFontSize, $bodyFontSize);
  }
  &.pre {
    white-space: pre-wrap;
    -moz-tab-size: 2;
      -o-tab-size: 2;
         tab-size: 2;
    font-size: var(--bodyFontSize, $bodyFontSize);
  }
  &.code {
    font-family: Menlo, Monaco, Consolas, "Courier New", monospace;
    font-size: var(--codeFontSize, $codeFontSize);
    display: inline-block;
    padding: 10px;
    background: #333;
    color: #ddd;
    line-height: 1.5;
    border-radius: var(--borderRadius, $borderRadius);
    white-space: pre-wrap;
    -moz-tab-size: 2;
      -o-tab-size: 2;
         tab-size: 2;
  }
  &.figcaption {
    font-size: var(--captionFontSize, $captionFontSize);
    font-style: italic;
  }
  &.bold {
    font-weight: bold;
  }
  &.italic {
    font-style: italic;
  }
}

.asm-video {
  border-radius: 20px;
}

.asm-label {
  display: block;
  position: absolute;
  top: 7px;
  left: 9px;
  color: var(--labelFontColor, $labelFontColor);
  font-size: var(--labelFontSize, $labelFontSize);
  &[for="color"],
  &[for="range"],
  &[for="input"],
  &[for="imgup"] {
    position: static;
  }
}
